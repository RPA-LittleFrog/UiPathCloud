<Activity mc:Ignorable="sap sap2010" x:Class="Download" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_itemKey" Type="InArgument(x:String)" />
    <x:Property Name="out_mainFilePath" Type="OutArgument(x:String)" />
    <x:Property Name="in_token" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>696.8,2692</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Download_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="66">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Web</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Download" sap:VirtualizedContainerService.HintSize="566.4,2627.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="endPoint" />
      <Variable x:TypeArguments="x:String" Name="DownloadedFilePath" />
      <Variable x:TypeArguments="x:Boolean" Name="isFolderExist" />
      <Variable x:TypeArguments="x:String" Name="chosenButton" />
      <Variable x:TypeArguments="si:DirectoryInfo" Name="extractedFolder" />
      <Variable x:TypeArguments="x:Boolean" Name="isFileDownloaded" />
      <Variable x:TypeArguments="x:Int32" Name="codeStatus" />
      <Variable x:TypeArguments="x:Boolean" Name="istempFolderExist" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="524.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;[Download start]&quot;]" />
    <Sequence DisplayName="sequence assign " sap:VirtualizedContainerService.HintSize="524.8,252.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign endPoint" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endPoint]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_config("orchestratorUrl").ToString+"/odata/Processes/UiPath.Server.Configuration.OData.DownloadPackage(key='"+in_itemKey+"')"]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign DownloadedFilePath" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[DownloadedFilePath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["C:\Users\"+ Environment.UserName.ToLower +"\Downloads\"+in_itemKey.Replace(":",".")+ ".nupkg"]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Sequence request API" sap:VirtualizedContainerService.HintSize="524.8,248" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResponseHeaders="{x:Null}" Result="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request (Download Package/Library)" EnableSSLVerification="True" EndPoint="[in_Config(&quot;orchestratorUrl&quot;).ToString+ in_config(&quot;tenancyName&quot;).ToString +&quot;/orchestrator_/odata/Processes/UiPath.Server.Configuration.OData.DownloadPackage(key='&quot; + in_itemKey+&quot;')&quot;]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" ResourcePath="[DownloadedFilePath]" StatusCode="[codeStatus]" TimeoutMS="8000">
        <ui:HttpClient.Attachments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Attachments>
        <ui:HttpClient.Cookies>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Cookies>
        <ui:HttpClient.Headers>
          <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + in_token]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="X-UIPATH-TenantName">[System.Web.HttpUtility.UrlEncode(in_Config("tenancyName").ToString)]</InArgument>
        </ui:HttpClient.Headers>
        <ui:HttpClient.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Parameters>
        <ui:HttpClient.UrlSegments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.UrlSegments>
      </ui:HttpClient>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[codeStatus]" />
    </Sequence>
    <Sequence DisplayName="Sequence Path exist" sap:VirtualizedContainerService.HintSize="524.8,593.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:PathExists DisplayName="Path Exists" Exists="[isFileDownloaded]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[DownloadedFilePath]" PathType="File" />
      <ui:PathExists DisplayName="Path Exists" Exists="[istempFolderExist]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[in_config(&quot;tempFolder&quot;).ToString]" PathType="File" />
      <If Condition="[istempFolderExist]" DisplayName="If folder Exist" sap:VirtualizedContainerService.HintSize="483.2,240" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Else>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[in_config(&quot;tempFolder&quot;).ToString]" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Sequence move file into workspace folder" sap:VirtualizedContainerService.HintSize="524.8,954.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;tempFolder&quot;).ToString + &quot;\&quot;+in_itemKey.Replace(&quot;:&quot;,&quot;.&quot;).Replace(&quot;.nupkg&quot;,&quot;.zip&quot;)]" DisplayName="Move nupkg file to zip file" sap:VirtualizedContainerService.HintSize="444,160" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[DownloadedFilePath]" />
      <uascw:ExtractFiles Password="{x:Null}" CodePage="Default" DestinationFolder="[in_Config(&quot;tempFolder&quot;).ToString]" DestinationFolderInfo="[extractedFolder]" DisplayName="Extract/Unzip Files" ExtractToADedicatedFolder="True" FileToExtract="[in_Config(&quot;tempFolder&quot;).ToString + &quot;\&quot;+in_itemKey.Replace(&quot;:&quot;,&quot;.&quot;).Replace(&quot;.nupkg&quot;,&quot;.zip&quot;)]" sap:VirtualizedContainerService.HintSize="444,205" sap2010:WorkflowViewState.IdRef="ExtractFiles_1" SkipUnsupportedFiles="False" />
      <ui:PathExists DisplayName="Path Exists" Exists="[isFolderExist]" sap:VirtualizedContainerService.HintSize="444,89" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[in_Config(&quot;workspaceFolder&quot;).ToString + &quot;\&quot;+in_itemKey.Replace(&quot;:&quot;,&quot;.&quot;)]" PathType="Folder" />
      <If Condition="[isFolderExist]" DisplayName="If isFolderExist" sap:VirtualizedContainerService.HintSize="444,51" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="526,399" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MessageBox Buttons="YesNo" Caption="Warning" ChosenButton="[chosenButton]" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;The folder &quot; + in_itemKey.Replace(&quot;:&quot;,&quot;.&quot;) + &quot; already exist in workspace&quot; + Environment.NewLine + Environment.NewLine +&quot;Overwrite ?&quot;]" />
            <If Condition="[chosenButton.Equals(&quot;Yes&quot;)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[in_Config(&quot;workspaceFolder&quot;).ToString + &quot;\&quot;+in_itemKey.Replace(&quot;:&quot;,&quot;.&quot;)]" />
              </If.Then>
              <If.Else>
                <Throw Exception="[new BusinessRuleException(&quot;the projet folder already exit&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Else>
            </If>
          </Sequence>
        </If.Then>
      </If>
      <InvokeMethod DisplayName="Invoke Method move folder" sap:VirtualizedContainerService.HintSize="444,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Move" TargetType="si:Directory">
        <InArgument x:TypeArguments="x:String">[extractedFolder.FullName+"\lib\net45"]</InArgument>
        <InArgument x:TypeArguments="x:String">[in_Config("workspaceFolder").ToString + "\"+in_itemKey.Replace(":",".")]</InArgument>
      </InvokeMethod>
      <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete temp folder" sap:VirtualizedContainerService.HintSize="444,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[in_Config(&quot;tempFolder&quot;).ToString]" />
    </Sequence>
    <Assign DisplayName="Assign out_mainFilePath" sap:VirtualizedContainerService.HintSize="524.8,60" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_mainFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("workspaceFolder").ToString + "\"+in_itemKey.Replace(":",".") + "\Main.xaml"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="524.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;[Download end]&quot;]" />
  </Sequence>
</Activity>